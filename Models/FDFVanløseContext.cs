// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace MYPROJECT2.Models;

public partial class FDFVanløseContext : DbContext
{
    public FDFVanløseContext()
    {
    }

    public FDFVanløseContext(DbContextOptions<FDFVanløseContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Assigment> Assigments { get; set; }

    public virtual DbSet<Børn> Børns { get; set; }

    public virtual DbSet<Group> Groups { get; set; }

    public virtual DbSet<Leader> Leaders { get; set; }

    public virtual DbSet<Sale> Sales { get; set; }

    public virtual DbSet<Ticket> Tickets { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=FDF;Integrated Security=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Assigment>(entity =>
        {
            entity.HasKey(e => new { e.AssigmentId, e.ChildId }).HasName("PK__Assigmen__B54A3BEE14D421D4");

            entity.Property(e => e.AssigmentId).ValueGeneratedOnAdd();
            entity.Property(e => e.Stutus).IsFixedLength();

            entity.HasOne(d => d.Child).WithMany(p => p.Assigments)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Assigment__CHILD__45F365D3");

            entity.HasOne(d => d.Leader).WithMany(p => p.Assigments).HasConstraintName("FK__Assigment__LEADE__44FF419A");

            entity.HasOne(d => d.Ticket).WithMany(p => p.Assigments).HasConstraintName("FK__Assigment__TICKE__440B1D61");
        });

        modelBuilder.Entity<Børn>(entity =>
        {
            entity.HasKey(e => e.ChildId).HasName("PK__Children__F76978E42CC13A8E");

            entity.Property(e => e.Address).IsFixedLength();
            entity.Property(e => e.Name).IsFixedLength();

            entity.HasOne(d => d.Group).WithMany(p => p.Børns).HasConstraintName("FK__Children__GROUP___3B75D760");
        });

        modelBuilder.Entity<Group>(entity =>
        {
            entity.HasKey(e => e.GroupId).HasName("PK__Groups__3EFEA3DE4C74D314");

            entity.Property(e => e.GroupId).ValueGeneratedNever();
            entity.Property(e => e.Name).IsFixedLength();

            entity.HasOne(d => d.Leader).WithMany(p => p.Groups).HasConstraintName("FK__Groups__LEADER_I__38996AB5");
        });

        modelBuilder.Entity<Leader>(entity =>
        {
            entity.HasKey(e => e.LeaderId).HasName("PK__Leader__F4E5F64CCF2C4DCF");

            entity.Property(e => e.LeaderId).ValueGeneratedNever();
            entity.Property(e => e.Name).IsFixedLength();
            entity.Property(e => e.UserId).IsFixedLength();
        });

        modelBuilder.Entity<Sale>(entity =>
        {
            entity.HasKey(e => new { e.SaleId, e.ChildId }).HasName("PK__Sale__D303D26F3AA33E9E");

            entity.Property(e => e.SaleId).ValueGeneratedOnAdd();
            entity.Property(e => e.Stutus).IsFixedLength();

            entity.HasOne(d => d.Child).WithMany(p => p.Sales)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Sale__CHILD_ID__4AB81AF0");

            entity.HasOne(d => d.Leader).WithMany(p => p.Sales).HasConstraintName("FK__Sale__LEADER_ID__49C3F6B7");

            entity.HasOne(d => d.Ticket).WithMany(p => p.Sales).HasConstraintName("FK__Sale__TICKET_ID__48CFD27E");
        });

        modelBuilder.Entity<Ticket>(entity =>
        {
            entity.HasKey(e => e.TicketId).HasName("PK__Tickets__7F5E71D67F9FB34D");

            entity.Property(e => e.Stutus).IsFixedLength();
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}